openapi: 3.1.0
info:
  version: 1.0.0
  title: Subscription management
  description:
    
    A user can purchase a service plan or have no plan. A plan can be chosen via API but only if this plan is available by particular provider. If a user request a sunscription, their status changes to `signing` until the purchase is confirmed.
    

    The subscription status is introduced by the new `sub_status` attribute which can have one of the `signed`, `unsigned` or `absent` values. Plans can be created, modified and deleted.

paths:
  /api/external/user:
    get:
      tags:
        - User
      summary: Request the user status.
      description: Request the partner for the user status.

      parameters:
        - name: user_id
          in: query
          description: Unique user identifier, seven characters long.
          required: false
          example: '3345011'
          schema:
            type: string
            format: uuid
            
        - name: from
          in: query
          description: Pagination start timestamp.
          required: false
          schema:
            type: integer

        - name: to
          in: query
          description: Pagination end timestamp.
          required: false
          schema:
            type: integer

        - name: limit
          in: query
          description: Limit to records returned, from 10 to 1000.
          required: false
          schema:
            type: integer
            minimum: 10
            maximum: 1000
            default: 1000

        - name: provider_id
          in: query
          description: Unique identifier of the partner a user bound to, four characters long.
          required: false
          schema:
            type: string

      responses:

        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserResponse'

        '400':
          description: Error.
    put:
      tags:
        - User
      summary: Request a subscription plan.
      description: Request a subscription plan.

      parameters:
        - name: user_id
          in: query
          description: Unique user identifier, seven characters long.
          required: true
          example: '3345011'
          schema:
            type: string
            format: uuid

        - name: plan
          in: query
          description: Requested plan name.
          required: true
          example: "basic"
          schema:
            type: string
            enum:
              - basic
              - advanced
              - company  

      responses:

        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserResponse'

        '400':
          description: Error.

  /api/partner:
    get:
      tags:
        - Partner
      summary: Request the partner state.
      description: Request the partner operation state.

      parameters:
        - name: provider_id
          in: query
          description: Unique partner identifier
          required: true
          schema:
            type: string
            format: uuid

        - name: from
          in: query
          description: Pagination start timestamp.
          required: false
          schema:
            type: integer

        - name: to
          in: query
          description: Pagination end timestamp.
          required: false
          schema:
            type: integer

        - name: status
          description: Partner operation state.
          in: query
          required: false
          schema:
            type: string
            enum:
              - active
              - stopped

      responses:

        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PartnerResponse'

        '400':
          description: Error.

    post:
      tags:
        - Partner
      summary: Create a list of plans.
      description: Create plans for the partner. Requires the [basic HTTP authorization](https://en.wikipedia.org/wiki/Basic_access_authentication).

      parameters:
        - name: provider_id
          in: query
          description: Unique partner identifier
          required: true
          example: 2234
          schema:
            type: string
            format: uuid

        - name: list
          description: Partner plan types to be created. Can be any combination of `basic`, `advanced`, `company` divided by commas.
          in: query
          required: true
          example: basic, advanced
          schema:
            type: string

      responses:

        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerPlansResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PartnerPlansResponse'

        '400':
          description: Error.

    put:
      tags:
        - Partner
      summary: Modify a plan.
      description: Modify a partner plan. Requires the [basic HTTP authorization](https://en.wikipedia.org/wiki/Basic_access_authentication).

      parameters:
        - name: provider_id
          in: query
          description: Unique partner identifier
          required: true
          example: 2234
          schema:
            type: string
            format: uuid

        - name: type
          description: Partner plan type to be modified.
          in: query
          required: true
          example: basic
          schema:
            type: string
            enum:
              - basic
              - advanced
              - company
          
        - name: permissions
          description: Encoded permissions for the plan.
          in: query
          required: true
          example: Zm9vYmFyLCBib29mYXIsIDQy
          schema:
            type: string
            format: byte

      responses:

        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerModPlanResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PartnerModPlanResponse'

        '400':
          description: Error.

    delete:
      tags:
        - Partner
      summary: Delete a plan.
      description: Delete a partner's plan. Requires the [basic HTTP authorization](https://en.wikipedia.org/wiki/Basic_access_authentication).

      parameters:
        - name: provider_id
          in: query
          description: Unique partner identifier
          required: true
          example: 2234
          schema:
            type: string
            format: uuid

        - name: type
          description: Partner plan type to be deleted.
          in: query
          required: true
          example: basic
          schema:
            type: string
            enum:
              - basic
              - advanced
              - company
              -
      responses:

        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerDelPlanResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PartnerDelPlanResponse'

        '400':
          description: Error.
  
components:

  schemas:

    UserResponse:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
          description: Unique user identifier, seven characters.
          example: 3345601

        provider_id:
            type: string
            format: uuid
            description: Unique identifier of the partner a user bound to, four characters.
            example: 1243

        status:
          type: string
          description: User service state.
          enum:
            - active
            - inactive
            - idle
          example: 'active'

        type:
          type: string
          description: User type.
          enum:
            - basic
            - guest
            - company
            - advanced
            - admin
          example: 'basic'

        zone:
          type: string
          description: Region of residence. Two lowercase letters (Alpha-2 code, ISO 3166).
          example: 'us'

        sub_status:
          description: Subscription status.
          type: string
          enum:
            - signed
            - signing
            - unsigned
            - absent
          example: 'signing'

    PartnerResponse:
      type: object
      properties: 
        provider_id:
          description: Unique partner identifier, four characters long.
          type: string
          example: '2234'

        status:
          description: Partner operation state.
          type: string
          enum:
            - active
            - stopped
          example: 'active'
    
    PartnerPlansResponse:
      type: object
      properties: 
        provider_id:
          description: Unique partner identifier, four characters long.
          type: string
          example: '2234'

        list:
          description: Created plans list, divided by commas.
          type: string
          example: basic, advanced

    PartnerDelPlanResponse:
      type: object
      properties: 
        provider_id:
          description: Unique partner identifier, four characters long.
          type: string
          example: '2234'

        list:
          description: Modified plans list, divided by commas.
          type: string
          example: basic

    PartnerModPlanResponse:
      type: object
      properties: 
        provider_id:
          description: Unique partner identifier, four characters long.
          type: string
          example: '2234'

        plan:
          description: Modified plan type.
          type: string
          example: basic
          enum:
            - basic
            - advanced
            - company
